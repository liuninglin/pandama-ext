version: "3.1"

services:
  postgres:
    image: postgres:9.6
    restart: always
    networks:
      - inner_pandama
    environment:
      - POSTGRES_USER=pandama
      - POSTGRES_PASSWORD=pandama
      - POSTGRES_DB=pandama
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:6.2
    restart: always
    networks:
      - inner_pandama
    command: redis-server --requirepass pandama
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data

  mongodb:
    image: mongo:5.0.5
    restart: always
    networks:
      - inner_pandama
    environment:
      - MONGO_INITDB_ROOT_USERNAME=pandama
      - MONGO_INITDB_ROOT_PASSWORD=pandama
      - MONGO_INITDB_DATABASE=pandama
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db

  neo4j:
    image: neo4j/neo4j-arm64-experimental:4.1.0-arm64
    restart: always
    networks:
      - inner_pandama
    environment:
      - NEO4J_AUTH=neo4j/pandama
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./data/neo4j:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.2
    restart: always
    networks:
      - inner_pandama
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=pandama
      - http.host=0.0.0.0
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
    ports:
      - "9200:9200"
    volumes:
      - ./data/elasticsearch/nodes/0:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    networks:
      - inner_pandama
    environment:
      - RABBITMQ_SSL_CA_FILE=/certs/rabbitmq/ca_certificate.pem
      - RABBITMQ_SSL_CERT_FILE=/certs/rabbitmq/server_certificate.pem
      - RABBITMQ_SSL_KEY_FILE=/certs/rabbitmq/server_key.pem
      - RABBITMQ_DEFAULT_USER=pandama
      - RABBITMQ_DEFAULT_PASS=pandama
    ports:
      - "15672:15672"
      - "15671:15671"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
      - ./certs/rabbitmq:/certs/rabbitmq
  
  celery_worker:
    image: johnnyliunice/pandama:latest
    restart: always
    networks:
      - inner_pandama
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - mongodb
      - neo4j
      - elasticsearch
    build: .
    env_file: ./env/.env.prod
    links:
     - postgres
    command: 
      bash ./wait-for-it.sh --timeout=0 postgres:5432 -- 
      sh -c "celery -A config worker -c 1 --beat -l INFO"
    volumes:
      - ./code:/code
      - ./logs:/logs

  web:
    image: johnnyliunice/pandama:latest
    restart: always
    networks:
      - inner_pandama
      - outer_pandama
    depends_on:
      - celery_worker
    env_file: ./env/.env.prod
    links:
     - postgres
    command: 
      bash ./wait-for-it.sh postgres:5432 -t 0 -s -- 
      python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./code:/code
      - ./logs:/logs
      - ./env/chatbot_credential.json:/code/env/chatbot_credential.json
    ports:
      - "8000:8000"

  nginx:
    image: nginx:1.13
    restart: always
    depends_on:
      - celery_worker
    networks:
      - outer_pandama
    ports:
      - 80:80
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
      - ./static:/usr/share/nginx/html/static 

networks:
  inner_pandama:
    ipam:
      driver: default
      config:
        - subnet: 10.20.0.0/16
  outer_pandama:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/16